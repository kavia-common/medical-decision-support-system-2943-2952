{"is_source_file": true, "format": "Python", "description": "This source file implements a local vector store for document similarity search using TF vectors and cosine similarity. It includes functions for tokenization, TF vector calculation, cosine similarity computation, and a class 'LocalVectorStore' that manages document indexing, persistence, and similarity search.", "external_files": ["./utils.py"], "external_methods": ["ensure_dir"], "published": ["DEFAULT_RAG_ROOT", "LocalVectorStore"], "classes": [{"name": "LocalVectorStore", "description": "A minimal local vector store that indexes text documents as TF vectors, persists the index to disk, and provides methods for adding documents and performing similarity search."}], "methods": [{"name": "List[str] _tokenize(text: str)", "description": "Tokenizes input text into lowercase tokens, splitting on whitespace.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,float] _tf(text: str)", "description": "Calculates term frequency (TF) vector for a given text.", "scope": "", "scopeKind": ""}, {"name": "float _cosine(a: Dict[str, float], b: Dict[str, float])", "description": "Computes the cosine similarity between two TF vectors.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, root: str = DEFAULT_RAG_ROOT)", "description": "Initializes the LocalVectorStore, setting the root directory, ensuring it exists, and loading existing index data.", "scope": "LocalVectorStore", "scopeKind": "class"}, {"name": "_load(self)", "description": "Loads the index data from disk into memory.", "scope": "LocalVectorStore", "scopeKind": "class"}, {"name": "_persist(self, doc: Dict[str, Any])", "description": "Appends a document's data to the index file on disk.", "scope": "LocalVectorStore", "scopeKind": "class"}, {"name": "None add_documents(self, docs: List[Dict[str, Any]])", "description": "Adds a list of documents to the index, computes their TF vectors, and persists them.", "scope": "LocalVectorStore", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] similarity_search(self, query: str, top_k: int = 3)", "description": "Performs a similarity search to find the top_k most similar documents to a query string.", "scope": "LocalVectorStore", "scopeKind": "class"}], "calls": ["ensure_dir", "os.path.join", "os.path.exists", "open", "json.loads", "json.dumps", "hashlib.sha1", "self._load", "self._persist", "self._docs.append", "self._persist", "self._docs", "_tf", "_cosine"], "search-terms": ["LocalVectorStore", "vector similarity", "TF vectors", "cosine similarity", "persistent index", "add_documents", "similarity_search"], "state": 2, "file_id": 22, "knowledge_revision": 45, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_RAG_ROOT", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^DEFAULT_RAG_ROOT = os.path.join(os.path.dirname(os.path.dirname(__file__)), \"rag_index\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "LocalVectorStore", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^class LocalVectorStore:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^    def __init__(self, root: str = DEFAULT_RAG_ROOT):$/", "language": "Python", "kind": "member", "signature": "(self, root: str = DEFAULT_RAG_ROOT)", "scope": "LocalVectorStore", "scopeKind": "class"}, {"_type": "tag", "name": "_cosine", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^def _cosine(a: Dict[str, float], b: Dict[str, float]) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "function", "signature": "(a: Dict[str, float], b: Dict[str, float])"}, {"_type": "tag", "name": "_load", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^    def _load(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "LocalVectorStore", "scopeKind": "class"}, {"_type": "tag", "name": "_persist", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^    def _persist(self, doc: Dict[str, Any]):$/", "language": "Python", "kind": "member", "signature": "(self, doc: Dict[str, Any])", "scope": "LocalVectorStore", "scopeKind": "class"}, {"_type": "tag", "name": "_tf", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^def _tf(text: str) -> Dict[str, float]:$/", "language": "Python", "typeref": "typename:Dict[str,float]", "kind": "function", "signature": "(text: str)"}, {"_type": "tag", "name": "_tokenize", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^def _tokenize(text: str) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "function", "signature": "(text: str)"}, {"_type": "tag", "name": "add_documents", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^    def add_documents(self, docs: List[Dict[str, Any]]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, docs: List[Dict[str, Any]])", "scope": "LocalVectorStore", "scopeKind": "class"}, {"_type": "tag", "name": "similarity_search", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/rag.py", "pattern": "/^    def similarity_search(self, query: str, top_k: int = 3) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, query: str, top_k: int = 3)", "scope": "LocalVectorStore", "scopeKind": "class"}], "hash": "7f8e422332f847160b2e38274fe36d16", "format-version": 4, "code-base-name": "medical_decision_backend", "filename": "medical_decision_backend/api/rag.py", "fields": [{"name": "DEFAULT_RAG_ROOT = os.path.join(os.path.dirname(os.path.dirname(__file__)), \"rag_index\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"45": ""}]}