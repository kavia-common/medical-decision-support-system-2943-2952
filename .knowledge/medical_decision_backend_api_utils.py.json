{"is_source_file": true, "format": "Python", "description": "This file provides utilities for data redaction, session management, theme generation, JSON handling, and various heuristics for extracting structured information from free text in a medical decision support system backend. It includes functions for redacting PHI, detecting red flags, parsing user input into structured data, generating acknowledgments, and managing UI hints and safety warnings.", "external_files": ["base64", "json", "os", "re", "uuid", "datetime"], "external_methods": ["base64.b64decode", "json.dumps", "os.makedirs", "datetime.utcnow"], "published": ["generate_session_id", "redact_phi", "detect_red_flags", "b64_to_bytes", "ensure_dir", "now_iso", "theme_header_html", "safe_json_dump", "extract_fields_from_text", "build_acknowledgment", "get_suggestions_for_key", "get_hints_for_key", "build_safety_banner", "transcript_tail"], "classes": [], "methods": [{"name": "str generate_session_id()", "description": "Generate a unique session ID.", "scope": "", "scopeKind": ""}, {"name": "Tuple[str,List[str]] redact_phi(text: str)", "description": "Redact PHI (Personal Health Information) from input text using regex heuristics, returning redacted text and notes.", "scope": "", "scopeKind": ""}, {"name": "List[str] detect_red_flags(text: str)", "description": "Detect presence of red-flag health symptoms in text based on predefined keywords.", "scope": "", "scopeKind": ""}, {"name": "bytes b64_to_bytes(b64: str)", "description": "Decode base64-encoded string into bytes safely.", "scope": "", "scopeKind": ""}, {"name": "None ensure_dir(path: str)", "description": "Create directory if it does not exist.", "scope": "", "scopeKind": ""}, {"name": "str now_iso()", "description": "Return current UTC time in ISO 8601 format.", "scope": "", "scopeKind": ""}, {"name": "str theme_header_html(title: str)", "description": "Generate an HTML snippet for the Ocean Professional theme header.", "scope": "", "scopeKind": ""}, {"name": "str safe_json_dump(data: Dict[str, Any])", "description": "Serialize a dict to a formatted JSON string for storage.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] extract_fields_from_text(text: str, expected_key: Optional[str] = None)", "description": "Extract structured emotion or medical info from free text input.", "scope": "", "scopeKind": ""}, {"name": "str build_acknowledgment(prev_key: Optional[str], user_text: str)", "description": "Create empathetic acknowledgment messages for user input.", "scope": "", "scopeKind": ""}, {"name": "List[str] get_suggestions_for_key(key: Optional[str])", "description": "Provide UI suggestion chips based on the expected key.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] get_hints_for_key(key: Optional[str])", "description": "Provide gentle hints for how to answer the next question.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] build_safety_banner(red_flags: List[str])", "description": "Construct safety warning payloads if red flags are detected.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] transcript_tail(turns: List[Dict[str, Any]], n: int = 4)", "description": "Retrieve the last few dialogue turns for context display.", "scope": "", "scopeKind": ""}], "calls": ["base64.b64decode", "json.dumps", "os.makedirs", "datetime.utcnow"], "search-terms": ["redact_phi", "detect_red_flags", "extract_fields_from_text", "build_acknowledgment", "build_safety_banner", "transcript_tail", "public_interface", "medical_decision_support"], "state": 2, "file_id": 20, "knowledge_revision": 59, "git_revision": "5ecb7ead0df7813a315513751e73f524d30da2f5", "revision_history": [{"41": ""}, {"59": "5ecb7ead0df7813a315513751e73f524d30da2f5"}], "ctags": [{"_type": "tag", "name": "ALLERGY_PAT", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^ALLERGY_PAT = re.compile(r\"\\\\b(allerg(?:y|ies)|allergic to)\\\\b\", re.I)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DURATION_PAT", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^DURATION_PAT = re.compile(r\"\\\\b(?:for\\\\s*)?(\\\\d+)\\\\s*(?:day|days|d|week|weeks|w|month|months|m)\\\\/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "OCEAN_THEME", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^OCEAN_THEME = {$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ONSET_PAT", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^ONSET_PAT = re.compile(r\"\\\\b(?:started|onset|since)\\\\s+(?:on\\\\s+)?([A-Za-z]+|\\\\d{1,2}[\\/.-]\\\\d{1/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "RED_FLAG_KEYWORDS", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^RED_FLAG_KEYWORDS = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SEVERITY_PAT", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^SEVERITY_PAT = re.compile(r\"\\\\b(?:severity|pain|rate|score)?\\\\s*(?:is|:)?\\\\s*(\\\\d{1,2})\\\\b\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "b64_to_bytes", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def b64_to_bytes(b64: str) -> bytes:$/", "language": "Python", "typeref": "typename:bytes", "kind": "function", "signature": "(b64: str)"}, {"_type": "tag", "name": "build_acknowledgment", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def build_acknowledgment(prev_key: Optional[str], user_text: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(prev_key: Optional[str], user_text: str)"}, {"_type": "tag", "name": "build_safety_banner", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def build_safety_banner(red_flags: List[str]) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(red_flags: List[str])"}, {"_type": "tag", "name": "detect_red_flags", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def detect_red_flags(text: str) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "function", "signature": "(text: str)"}, {"_type": "tag", "name": "ensure_dir", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def ensure_dir(path: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(path: str)"}, {"_type": "tag", "name": "extract_fields_from_text", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def extract_fields_from_text(text: str, expected_key: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(text: str, expected_key: Optional[str] = None)"}, {"_type": "tag", "name": "generate_session_id", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def generate_session_id() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_hints_for_key", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def get_hints_for_key(key: Optional[str]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(key: Optional[str])"}, {"_type": "tag", "name": "get_suggestions_for_key", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def get_suggestions_for_key(key: Optional[str]) -> List[str]:$/", "language": "Python", "typeref": "typename:List[str]", "kind": "function", "signature": "(key: Optional[str])"}, {"_type": "tag", "name": "now_iso", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def now_iso() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "redact_phi", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def redact_phi(text: str) -> Tuple[str, List[str]]:$/", "language": "Python", "typeref": "typename:Tuple[str,List[str]]", "kind": "function", "signature": "(text: str)"}, {"_type": "tag", "name": "safe_json_dump", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def safe_json_dump(data: Dict[str, Any]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: Dict[str, Any])"}, {"_type": "tag", "name": "theme_header_html", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def theme_header_html(title: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(title: str)"}, {"_type": "tag", "name": "transcript_tail", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2943-2952/medical_decision_backend/api/utils.py", "pattern": "/^def transcript_tail(turns: List[Dict[str, Any]], n: int = 4) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(turns: List[Dict[str, Any]], n: int = 4)"}], "hash": "e4dbb5dea8e3f3550100bf2f0848f4dc", "format-version": 4, "code-base-name": "medical_decision_backend", "filename": "medical_decision_backend/api/utils.py", "fields": [{"name": "ALLERGY_PAT = re.compile(r\"\\\\b(allerg(?:y|ies)|allergic to)\\\\b\", re.I)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DURATION_PAT = re.compile(r\"\\\\b(?:for\\\\s*)?(\\\\d+)\\\\s*(?:day|days|d|week|weeks|w|month|months|m)\\\\/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OCEAN_THEME = {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ONSET_PAT = re.compile(r\"\\\\b(?:started|onset|since)\\\\s+(?:on\\\\s+)?([A-Za-z]+|\\\\d{1,2}[\\/.-]\\\\d{1/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "RED_FLAG_KEYWORDS = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SEVERITY_PAT = re.compile(r\"\\\\b(?:severity|pain|rate|score)?\\\\s*(?:is|:)?\\\\s*(\\\\d{1,2})\\\\b\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}